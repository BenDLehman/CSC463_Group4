//Aaron Gerber & Ben Lehman        Group 4         Lab 2: Touch Sensors
#define TIME 0.5
#define TWOTIME 1.0
//Our main contains a while loop that is never ending.
//Inside that loop there are three if statements. 
//The first two check if either of the sensors have been triggered.
//If neither of the sensors are triggered, the robot moves forward.
//If the sensors are triggered, depending on which sensor is triggered, the robot will turn the opposite way.
//This is because we want the robot to turn away from the wall.

int forwardCount = 0;
int main()
{
    while(1)
      {    
        printf("%d", forwardCount);
        if(leftSensor()== 1)
          {
            forwardCount = 0;
            goBackward(TIME);
            turnLeft(TIME);
        }
        else if(rightSensor() ==1)
          {
            forwardCount = 0;
            goBackward(TWOTIME);
            turnLeft(TWOTIME);
        }
        else
        {
            goForward(TIME);
            forwardCount += 1;
        }
        
    }
    
}

//Returns 1 if the sensor is triggered, 0 if it isnt.
int rightSensor()
{
    if(digital(14)== 1)
      {
        return 1;
    }
    else
      {
        return 0;
    }
}

//Returns 1 if the sensor is triggered, 0 if it isnt.
int leftSensor()
{
    if(digital(15)== 1)
      {
        return 1;
    }
    else
      {
        return 0;
    }
}

//Moves the robot forward for t amount of seconds, then shuts the motors off.
float goForward(float t)
{
    motor(0,40);
    motor(1,40);
    sleep(t);
    ao();
}

//Moves the robot backward for t amount of seconds, then shuts the motors off.
float goBackward(float t)
{
    motor(0,-30);
    motor(1,-30);
    sleep(t);
    ao();
}

//Turns the robot left for t seconds, then shuts the motors off.
float turnLeft(float t)
{
    motor(0,30);
    motor(1,-35);
    sleep(t);
    ao();
    return t;
}

//Turns the robot right for t seconds, then shuts the motors off.
float turnRight(float t)
{
    motor(1,30);
    motor(0,-35);
    sleep(t);
    ao();
    return t;
}

