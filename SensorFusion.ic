//Aaron Gerber & Ben Lehman        Group 4         Lab 2: Touch Sensors
#define TIME 3.0
#define LIGHTLEFT analog(2)
#define LIGHTRIGHT analog(5)
#define IRLEFT analog(3)
#define IRRIGHT analog(4)


int forwardCount = 0;
int irDiff = 0;
int lightDiff = 0;

//Our main contains a infinite while that contains a set of nested if statements
//The first if checks if the robot is close to the light, this will determine which sensor to use for movement
//If it isn't close then we use the IR sensors to turn away from the walls
//If it is close then we use the light sensors to turn towards the light and towards the exit
//We use the difference of two for each sensor to determine which way we need to turn
int main()
{
    while(1)
      {  
        if((LIGHTRIGHT > 185) || (LIGHTLEFT> 185))
          {
            irDiff = IRRIGHT - IRLEFT;
            printf("lightright: %d lightleft: %d\n", LIGHTRIGHT, LIGHTLEFT);
            if(irDiff > 10)
              {
                goBackward(1.0);
                turnRight(TIME);
            }
            else if(irDiff < -10)
              {
                goBackward(1.0);
                turnLeft(TIME);
            }
            else 
            {
                goForward(1.0);
            }
        }
        else
          {
            lightDiff = LIGHTRIGHT - LIGHTLEFT;
            printf("light: %d\n", irDiff);
            if(lightDiff > 5)
              {
                turnLeft(1.0);
            }
            else if(lightDiff < -5)
              {
                turnRight(1.0);
            }
            else 
            {
                goForward(1.0);
            }
        }  
    }    
}


//Moves the robot forward for t amount of seconds, then shuts the motors off.
float goForward(float t)
{
    motor(0,40);
    motor(1,40);
    sleep(t);
    ao();
}

//Moves the robot backward for t amount of seconds, then shuts the motors off.
float goBackward(float t)
{
    motor(0,-30);
    motor(1,-30);
    sleep(t);
    ao();
}

//Turns the robot left for t seconds, then shuts the motors off.
float turnLeft(float t)
{
    motor(0,40);
    motor(1,-15);
    sleep(t);
    ao();
    return t;
}

//Turns the robot right for t seconds, then shuts the motors off.
float turnRight(float t)
{
    motor(1,40);
    motor(0,-15);
    sleep(t);
    ao();
    return t;
}

